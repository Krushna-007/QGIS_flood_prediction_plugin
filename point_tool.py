# -*- coding: utf-8 -*-
"""
/***************************************************************************
 PointTool
                                 A QGIS plugin
 Point selection tool for flood prediction plugin
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-08-26
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Krushna Parmar
        email                : krushna.parmar@example.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from qgis.PyQt.QtCore import pyqtSignal
from qgis.gui import QgsMapToolEmitPoint
from qgis.core import QgsPointXY


class PointTool(QgsMapToolEmitPoint):
    """Map tool for selecting points on the map"""
    
    point_selected = pyqtSignal(QgsPointXY)
    
    def __init__(self, canvas):
        """Constructor
        
        :param canvas: The map canvas
        :type canvas: QgsMapCanvas
        """
        super(PointTool, self).__init__(canvas)
        self.canvas = canvas
        
    def canvasPressEvent(self, event):
        """Handle mouse press events on the canvas
        
        :param event: The mouse event
        :type event: QgsMapMouseEvent
        """
        # Get the point in map coordinates
        point = self.toMapCoordinates(event.pos())
        
        # Emit signal with the selected point
        self.point_selected.emit(point)
        
    def canvasReleaseEvent(self, event):
        """Handle mouse release events on the canvas
        
        :param event: The mouse event
        :type event: QgsMapMouseEvent
        """
        pass
        
    def canvasMoveEvent(self, event):
        """Handle mouse move events on the canvas
        
        :param event: The mouse event
        :type event: QgsMapMouseEvent
        """
        pass
        
    def activate(self):
        """Activate the tool"""
        super(PointTool, self).activate()
        
    def deactivate(self):
        """Deactivate the tool"""
        super(PointTool, self).deactivate()
        
    def isZoomTool(self):
        """Return whether this is a zoom tool"""
        return False
        
    def isTransient(self):
        """Return whether this tool is transient"""
        return False
        
    def isEditTool(self):
        """Return whether this is an edit tool"""
        return False
